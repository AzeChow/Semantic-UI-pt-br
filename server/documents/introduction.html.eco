  ---
layout      : 'default'
css         : 'guide'
title       : "Oque há de diferente?"
description : 'Separando a Semantica do pacote'
type        : 'Introdução UI'
---
<script src="/javascript/intro.js"></script>

<%- @partial('header') %>

<div class="main container">
  <div class="peek">
    <div class="ui vertical pointing secondary menu">
      <a class="active item">Filosofia</a>
    </div>
  </div>

    <h2 class="ui header">
      Construa layouts responsivos de forma fácil
      <div class="sub header">Desenhado completamente com EM</div>
    </h2>
    <p>Cada componente é definido usando <code>em</code> e <code>rem</code> para eles possam ser redimensionados de um jeito fácil. Quer um menu para ficar menor no celular? Basta mudar o tamanho da font usando media query. </p>

    <h2 class="ui header">
      Auto Explicação
      <div class="sub header">Descritivo e não Prescritivo</div>
    </h2>
    <p>Escrever um código front-end não deve exigir a nomeação ou conhecimentos de programação como um desenvolvedor nato.
    </p>
    <p>Em vez de usar abreviações, ou convenções da nomenclatura de programação, o Semantic usa uma linguagem simples, comum para as peças dos elementos de interface e padrões familiares encontrados nas línguas naturais para descrever elementos.</p>

    <h2 class="ui header">
      Tag Ambivalente
      <div class="sub header">Use qualquer tag que você quiser.</div>
    </h2>
    <p>As definições de interface no Semantic são tag ambivalente. Isso significa que você pode usar div, article, section, span sem afetar a exibição do elemento. Mas Tags especiais como table, td ainda carregam um significado especial em determinadas circunstâncias.</p>

    <h2 class="ui header">
     Ferramentas poderosas para expressar grupos e coleções.
      <div class="sub header">Não seja repetitivo.</div>
    </h2>
    <p>Em Inglês é muito mais fácil dizer "Há três homens altos" do que "Aqui há um homem alto, um homem alto e um homem alto."</p>
    <p>No Semantic as definições dos elementos podem ser expressas em grupos que possuem atributos compartilhados entre si como tamanho, cor, tipo, evitando declarações repetitivas.</p>

    <h2 class="ui header">
      Portátil e auto-suficiente.
      <div class="sub header">Par usar o Semantic não significa que você deve adotar a estrutura inteira do framework, ou reescrever o seu código base.</div>
    </h2>
    <p>Os componentes do Semantic são escritos em um "estilo singular", mas não fazem parte da biblioteca abrangente. Você só quer um par de componentes? Não tem problema, utilize apenas o que você precisa.</p>
    <p>Componentes de UI no Semantic também definem ferramentas opcionais e necessárias com outros componentes em que o seu uso se cruzam. Isso significa, por exemplo, um pop-up pode verificar a existência de componente de animação CSS antes de usar o fallback do javascript das animações.</p>

    <h2 class="ui header">
      Linguagem comum, diferentes implementações
      <div class="sub header">Reivente o estilo do seu site sem mexer na estrutura dele.</div>
    </h2>
    <p>Descrevendo o conteúdo do seu site usando uma linguagem comum com a do Semantic permite que outros desenvolvedores criem definições de UI para combinar um vocabulário comum. Isto significa que você pode redesenhar seu site, sem reequipar seu html. Basta alterar o "look and feel" da cara do seu site usando uma definição de UI diferente.</p>

    <h2 class="ui header">
      Só as coisas importantes
      <div class="sub header">Nâo a pia da cozinha</div>
    </h2>
    <p>Em vez de dar todas as variações possíveis ou o comportamento sob o Sol, as definições de elementos são um ponto de partida. Não há grandes downloads com recursos opcionais que você provavelmente nunca vai usar, apenas o material que lhe interessa.</p>

  <div class="ui horizontal divider"><i class="circular heart icon"></i></div>

  <a class="ui large right labeled teal icon button" href="/introduction/definitions.html">
    PRÓX.: DEFINIÇÕES UI
    <i class="right arrow icon"></i>
  </a>

</div>
